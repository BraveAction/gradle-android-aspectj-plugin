buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven() {
            name 'RoboBinding AspectJPlugin Maven Repository'
            url "https://github.com/RoboBinding/RoboBinding-aspectj-plugin/raw/master/mavenRepo"

        }
//        mavenLocal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.7'
        //classpath 'com.uphyca.gradle:gradle-android-aspectj-plugin:0.9.12'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        //classpath 'org.robobinding:aspectj-plugin:0.8.+'
        //classpath 'me.leolin:android-aspectj-plugin:1.0.7'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.uphyca.android-aspectj'

//apply plugin: 'org.robobinding.android-aspectj'
//apply plugin: 'me.leolin.gradle-android-aspectj'

def isWercker = "true".equals(System.getenv("WERCKER"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    compileOptions {
        encoding = "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    dexOptions {
        // Skip pre-dexing when running on Wercker CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !isWercker
    }

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
        }
        staging {

        }
    }


    productFlavors {

        flavorDimensions 'dimension1', 'dimension2'

        hoge {
            dimension "dimension1"
        }

        piyo {
            dimension "dimension2"
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {

    compile 'com.google.dagger:dagger:2.0.1'
    provided 'org.glassfish:javax.annotation:10.0-b28'
    apt 'com.google.dagger:dagger-compiler:2.0.1'

    // App dependencies
    compile 'com.android.support:appcompat-v7:23.0.1'


//    compile 'com.android.support:support-annotations:23.0.1'
//    compile 'com.google.guava:guava:18.0'
//    // Testing-only dependencies
//    // Force usage of support annotations in the test app, since it is internally used by the runner module.
//    androidTestCompile 'com.android.support:support-annotations:23.0.1'
//    androidTestCompile 'com.android.support.test:runner:0.4'
//    androidTestCompile 'com.android.support.test:rules:0.4'
//    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'


    //provided 'com.android.support:appcompat-v7:23.0.1'
    //ajInpath 'com.android.support:appcompat-v7:23.0.1'

    compile "org.aspectj:aspectjrt:${aspectjVersion}"

//    hogeAspectj 'com.squareup.leakcanary:leakcanary-android:1.3.1'
//    piyoAspectj 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    //debugAspectj 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    //releaseAspectj 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    compile 'se.emilsjolander:intentbuilder-api:0.14.0'
    apt 'se.emilsjolander:intentbuilder-compiler:0.14.0'
}
